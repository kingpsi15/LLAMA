{
  "subheading": "SA-10 DEVELOPER CONFIGURATION MANAGEMENT",
  "start_text": "SA-10 DEVELOPER CONFIGURATION MANAGEMENT\nControl: ",
  "content": "SA-10 DEVELOPER CONFIGURATION MANAGEMENT\nControl:  Require the developer of the system, system component, or system service to:\nSelection (one or a.Perform configuration management during system, component, or service [\nmore): design; development; implementation; operation; disposal];\nAssignment: organization-b.Document, manage, and control the integrity of changes to [\ndefined configuration items under configuration management];\nc.Implement only organization-approved changes to the system, component, or service;\nCHAPTER THREE   PAGE 273\nNISTSP800-53,R.5SPCISO                                                               EV                                                                                      ECURITY AND RIVACY ONTROLS FOR NFORMATION YSTEMS AND RGANIZATIONS\n_________________________________________________________________________________________________\nd.Document approved changes to the system, component, or service and the potential\nsecurity and privacy impacts of such changes; and\ne.Track security flaws and flaw resolution within the system, component, or service and report\nAssignment: organization-defined personnelfindings to [].\nDiscussion:  Organizations consider the quality and completeness of configuration management\nactivities conducted by developers as direct evidence of applying effective security controls.\nControls include protecting the master copies of material used to generate security-relevant\nportions of the system hardware, software, and firmware from unauthorized modification or\ndestruction. Maintaining the integrity of changes to the system, system component, or system\nservice requires strict configuration control throughout the system development life cycle to\ntrack authorized changes and prevent unauthorized changes.\nThe configuration items that are placed under configuration managementinclude the formal  T\nimodel; the functional, high-level, and low-level design specifications; other design data; s\nimplementation documentation; source code and hardware schematics; the current running u\nlversion of the object code; tools for comparing new versions of security-relevant hardware ic\ndescriptions and source code with previous versions; and test fixtures and documentation. t\nDepending on the mission and business needs of organizations and the nature of the contractual\nrelationships in place, developers may provide configuration management support during the a\naoperations and maintenance stage of the system development life cycle.\nl, Related Controls:  CM-2, CM-3, CM-4, CM-7, CM-9, SA-4, SA-5, SA-8, SA-15, SI-2, SR-3, SR-4, SR-5e\nrSR-6.\nControl Enhancements: f\n| (1) DEVELOPER CONFIGURATION MANAGEMENT  SOFTWARE AND FIRMWARE INTEGRITY VERIFICATION r\nRequire the developer of the system, system component, or system service to enable f\nintegrity verification of software and firmware components. m\nhDiscussion:  Software and firmware integrity verification allows organizations to detect\nunauthorized changes to software and firmware components using developer-provided s\n/tools, techniques, and mechanisms. The integrity checking mechanisms can also address d\nicounterfeiting of software and firmware components. Organizations verify the integrity of .\ngsoftware and firmware components, for example, through secure one-way hashes provided\n0by developers. Delivered software and firmware components also include any updates to\n0such components.\n/Related Controls:  SI-7, SR-11. N\nT |(2) DEVELOPER CONFIGURATION MANAGEMENT  ALTERNATIVE CONFIGURATION MANAGEMENT\nP PROCESSES\nProvide an alternate configuration management process using organizational personnel in 0\nthe absence of a dedicated developer configuration management team. 3\nDiscussion:  Alternate configuration management processes may be required when\norganizations use commercial off-the-shelf information technology products. Alternate\nconfiguration management processes include organizational personnel who review and\napprove proposed changes to systems, system components, and system services and\nconduct security and privacy impact analyses prior to the implementation of changes to\nsystems, components, or services.\nRelated Controls:  None.\n| (3) DEVELOPER CONFIGURATION MANAGEMENT  HARDWARE INTEGRITY VERIFICATION\nRequire the developer of the system, system component, or system service to enable\nintegrity verification of hardware components.\nCHAPTER THREE   PAGE 274\nNISTSP800-53,R.5SPCISO                                                               EV                                                                                      ECURITY AND RIVACY ONTROLS FOR NFORMATION YSTEMS AND RGANIZATIONS\n_________________________________________________________________________________________________\nDiscussion:  Hardware integrity verification allows organizations to detect unauthorized\nchanges to hardware components using developer-provided tools, techniques, methods, and\nmechanisms. Organizations may verify the integrity of hardware components with hard-to-\ncopy labels, verifiable serial numbers provided by developers, and by requiring the use of\nanti-tamper technologies. Delivered hardware components also include hardware and\nfirmware updates to such components.\nRelated Controls:  SI-7.\n| (4) DEVELOPER CONFIGURATION MANAGEMENT  TRUSTED GENERATION\nRequire the developer of the system, system component, or system service to employ\ntools for comparing newly generated versions of security-relevant hardware descriptions,\nsource code, and object code with previous versions.\nDiscussion:  The trusted generation of descriptions, source code, and object code addresses\nauthorized changes to hardware, software, and firmware components between versions is\nduring development. The focus is on the efficacy of the configuration management process\nby the developer to ensure that newly generated versions of security-relevant hardware lic\ndescriptions, source code, and object code continue to enforce the security policy for the t\nnSA-10(1) and SA-10(3) allow system, system component, or system service. In contrast,\norganizations to detect unauthorized changes to hardware, software, and firmware\ncomponents using tools, techniques, or mechanisms provided by developers. a\nbRelated Controls:  None.\nr| (5)e DEVELOPER CONFIGURATION MANAGEMENT  MAPPING INTEGRITY FOR VERSION CONTROL\nRequire the developer of the system, system component, or system service to maintain\nhthe integrity of the mapping between the master build data describing the current version\nof security-relevant hardware, software, and firmware and the on-site master copy of the g\ndata for the current version. f\nDiscussion:  Mapping integrity for version control addresses changes to hardware, software,\nand firmware components during both initial development and system development life t\nscycle updates. Maintaining the integrity between the master copies of security-relevant\ndhardware, software, and firmware (including designs, hardware drawings, source code) and\ni.the equivalent data in master copies in operational environments is essential to ensuring the o\navailability of organizational systems that support critical mission and business functions.\n.Related Controls:  None. 6\n8| (6) DEVELOPER CONFIGURATION MANAGEMENT  TRUSTED DISTRIBUTION\nSRequire the developer of the system, system component, or system service to execute\nprocedures for ensuring that security-relevant hardware, software, and firmware updates S\ndistributed to the organization are exactly as specified by the master copies. .\nDiscussion:  The trusted distribution of security-relevant hardware, software, and firmware\n3updates help to ensure that the updates are correct representations of the master copies\nmaintained by the developer and have not been tampered with during distribution.\nRelated Controls:  None.\n| (7) DEVELOPER CONFIGURATION MANAGEMENT  SECURITY AND PRIVACY REPRESENTATIVES\nAssignment: organization-defined Require [security and privacy representatives] to be\nAssignment: organization-defined configuration change management and included in the [\ncontrol process].\nDiscussion: Information security and privacy representatives can include system security\nofficers, senior agency information security officers, senior agency officials for privacy, and\nsystem privacy officers. Representation by personnel with information security and privacy\nCHAPTER THREE   PAGE 275\nNISTSP800-53,R.5SPCISO                                                               EV                                                                                      ECURITY AND RIVACY ONTROLS FOR NFORMATION YSTEMS AND RGANIZATIONS\n_________________________________________________________________________________________________\nexpertise is important because changes to system configurations can have unintended side\neffects, some of which may be security- or privacy-relevant. Detecting such changes early in\nthe process can help avoid unintended, negative consequences that could ultimately affect\nthe security and privacy posture of systems. The configuration change management and\ncontrol process in this control enhancement refers to the change management and control\n. process defined by organizations in SA-10b\nRelated Controls:  None.\nReferences:  [FIPS 140-3], [FIPS 180-4], [FIPS 202], [SP 800-128], [SP 800-160-1]."
}