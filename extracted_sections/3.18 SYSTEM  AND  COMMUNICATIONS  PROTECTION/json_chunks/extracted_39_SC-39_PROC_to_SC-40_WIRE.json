{
  "subheading": "SC-39 PROCESS ISOLATION",
  "start_text": "SC-39 PROCESS ISOLATION T\nControl:  Maintain a sep",
  "content": "SC-39 PROCESS ISOLATION T\nControl:  Maintain a separate execution domain for each executing system process. p\nlDiscussion:  Systems can maintain separate execution domains for each executing process by ic\ntassigning each process a separate address space. Each system process has a distinct address i\nspace so that communication between processes is performed in a manner controlled through\nthe security functions, and one process cannot modify the executing code of another process. a\naMaintaining separate execution domains for executing processes can be achieved, for example,\nby implementing separate address spaces. Process isolation technologies, including sandboxing b\nor virtualization, logically separate software and firmware from other software, firmware, and\ndata. Process isolation helps limit the access of potentially untrusted software to other system e\nresources. The capability to maintain separate execution domains is available in commercial f\nhoperating systems that employ multi-state processor technologies.\neRelated Controls:  AC-3, AC-4, AC-6, AC-25, SA-8, SC-2, SC-3, SI-16.\nControl Enhancements:\nt| (1) PROCESS ISOLATION  HARDWARE SEPARATIONp\n/Implement hardware separation mechanisms to facilitate process isolation.\ni.Discussion:  Hardware-based separation of system processes is generally less susceptible to\ncompromise than software-based separation, thus providing greater assurance that the\n0separation will be enforced. Hardware separation mechanisms include hardware memory\n0management.\n/Related Controls:  None. N\n| (2) PROCESS ISOLATION  SEPARATE EXECUTION DOMAIN PER THREAD.\nAssignment: organization-Maintain a separate execution domain for each thread in [.\ndefined multi-threaded processing]. 0\n3Discussion:  None.\nRelated Controls:  None.\nReferences:  [SP 800-160-1]."
}