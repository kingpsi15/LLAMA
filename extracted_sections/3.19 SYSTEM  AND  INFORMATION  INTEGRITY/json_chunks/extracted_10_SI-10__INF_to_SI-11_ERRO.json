{
  "subheading": "SI-10  INFORMATION INPUT VALIDATION",
  "start_text": "SI-10  INFORMATION INPUT VALIDATION .\n8Assignment:",
  "content": "SI-10  INFORMATION INPUT VALIDATION .\n8Assignment: organization-Control:  Check the validity of the following information inputs: [\ndefined information inputs to the system]. -\n5Discussion:  Checking the valid syntax and semantics of system inputs\u2014including character set,\nlength, numerical range, and acceptable values\u2014verifies that inputs match specified definitions\nfor format and content. For example, if the organization specifies that numerical values between\n1-100 are the only acceptable inputs for a field in a given application, inputs of \u201c387,\u201d \u201cabc,\u201d or\n\u201c%K%\u201d are invalid inputs and are not accepted as input to the system. Valid inputs are likely to\nvary from field to field within a software application. Applications typically follow well-defined\nprotocols that use structured messages (i.e., commands or queries) to communicate between\nsoftware modules or system components. Structured messages can contain raw or unstructured\ndata interspersed with metadata or control information. If software applications use attacker-\nsupplied inputs to construct structured messages without properly encoding such messages,\nthen the attacker could insert malicious commands or special characters that can cause the data\nCHAPTER THREE   PAGE 349\nNISTSP800-53,R.5SPCISO                                                               EV                                                                                      ECURITY AND RIVACY ONTROLS FOR NFORMATION YSTEMS AND RGANIZATIONS\n_________________________________________________________________________________________________\nto be interpreted as control information or metadata. Consequently, the module or component\nthat receives the corrupted output will perform the wrong operations or otherwise interpret the\ndata incorrectly. Prescreening inputs prior to passing them to interpreters prevents the content\nfrom being unintentionally interpreted as commands. Input validation ensures accurate and\ncorrect inputs and prevents attacks such as cross-site scripting and a variety of injection attacks.\nRelated Controls:  None.\nControl Enhancements:\n| (1) INFORMATION INPUT VALIDATION  MANUAL OVERRIDE CAPABILITY\n(a)Provide a manual override capability for input validation ofthe following information\nAssignment: organization-defined inputs defined in the base control (SI-10)inputs: [];\nAssignment: organization-(b)Restrict the use of the manual override capability to only [\nhdefined authorized individuals]; and\n(c)Audit the use of the manual override capability.\nliDiscussion:  In certain situations, such as during events that are defined in contingency plans, c\nta manual override capability for input validation may be needed. Manual overrides are used i\nonly in limited circumstances and with the inputs defined by the organization.\nRelated Controls:  AC-3, AU-2, AU-12.\n| (2) INFORMATION INPUT VALIDATION  REVIEW AND RESOLVE ERRORS b\nAssignment: organization-defined time Review and resolve input validation errors within [f\neperiod].\nDiscussion:  Resolution of input validation errors includes correcting systemic causes of c\naerrors and resubmitting transactions with corrected input. Input validation errors are those\neSI-10). related to the information inputs defined by the organization in the base control (\nRelated Controls:  None.  m\n| (3) INFORMATION INPUT VALIDATION  PREDICTABLE BEHAVIORt\n:Verify that the system behaves in a predictable and documented manner when invalid\noinputs are received.\nrDiscussion:  A common vulnerability in organizational systems is unpredictable behavior\nwhen invalid inputs are received. Verification of system predictability helps ensure that the\n6system behaves as expected when invalid inputs are received. This occurs by specifying\nsystem responses that allow the system to transition to known states without adverse, 8\nunintended side effects. The invalid inputs are those related to the information inputs\nTSI-10). defined by the organization in the base control (\nRelated Controls:  None.\n| (4) INFORMATION INPUT VALIDATION  TIMING INTERACTIONS-\nrAccount for timing interactions among system components in determining appropriate\nresponses for invalid inputs.\nDiscussion:  In addressing invalid system inputs received across protocol interfaces, timing\ninteractions become relevant, where one protocol needs to consider the impact of the error\nresponse on other protocols in the protocol stack. For example, 802.11 standard wireless\nnetwork protocols do not interact well with Transmission Control Protocols (TCP) when\npackets are dropped (which could be due to invalid packet input). TCP assumes packet losses\nare due to congestion, while packets lost over 802.11 links are typically dropped due to noise\nor collisions on the link. If TCP makes a congestion response, it takes the wrong action in\nresponse to a collision event. Adversaries may be able to use what appear to be acceptable\nindividual behaviors of the protocols in concert to achieve adverse effects through suitable\nCHAPTER THREE   PAGE 350\nNISTSP800-53,R.5SPCISO                                                               EV                                                                                      ECURITY AND RIVACY ONTROLS FOR NFORMATION YSTEMS AND RGANIZATIONS\n_________________________________________________________________________________________________\nconstruction of invalid input. The invalid inputs are those related to the information inputs\n). defined by the organization in the base control (SI-10\nRelated Controls:  None.\n|(5) INFORMATION INPUT VALIDATION  RESTRICT INPUTS TO TRUSTED SOURCES AND APPROVED\nFORMATS\nAssignment: organization-defined trusted Restrict the use of information inputs to [\nsourcesAssignment: organization-defined formats] and/or [].\nDiscussion:  Restricting the use of inputs to trusted sources and in trusted formats applies\nthe concept of authorized or permitted software to information inputs. Specifying known\ntrusted sources for information inputs and acceptable formats for such inputs can reduce\nthe probability of malicious activity. The information inputs are those defined by the\nSI-10). organization in the base control (T\nisRelated Controls:  AC-3, AC-6.\n| (6) INFORMATION INPUT VALIDATION  INJECTION PREVENTIONlic\ntPrevent untrusted data injections. i\nDiscussion: Untrusted data injections may be prevented using a parameterized interface or is\naoutput escaping (output encoding). Parameterized interfaces separate data from code so\nthat injections of malicious or unintended data cannot change the semantics of commands i\nbeing sent. Output escaping uses specified characters to inform the interpreter\u2019s parser\nfwhether data is trusted. Prevention of untrusted data injections are with respect to the\nSI-10). information inputs defined by the organization in the base control (\nRelated Controls:  AC-3, AC-6. c\ngReferences:  [OMB A-130]."
}