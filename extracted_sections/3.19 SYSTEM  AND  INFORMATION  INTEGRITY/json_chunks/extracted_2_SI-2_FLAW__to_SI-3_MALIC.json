{
  "subheading": "SI-2 FLAW REMEDIATION",
  "start_text": "SI-2 FLAW REMEDIATION\nControl:\na.Identify, report,",
  "content": "SI-2 FLAW REMEDIATION\nControl:\na.Identify, report, and correct system flaws;\nb.Test software and firmware updates related to flaw remediation for effectiveness and\npotential side effects before installation;\nAssignment: organization-c.Install security-relevant software and firmware updates within [\ndefined time period] of the release of the updates; and\nd.Incorporate flaw remediation into the organizational configuration management process.\nDiscussion:  The need to remediate system flaws applies to all types of software and firmware.\nOrganizations identify systems affected by software flaws, including potential vulnerabilities\nhresulting from those flaws, and report this information to designated organizational personnel\nwith information security and privacy responsibilities. Security-relevant updates include patches, p\nbservice packs, and malicious code signatures. Organizations also address flaws discovered during\nassessments, continuous monitoring, incident response activities, and system error handling. By a\nincorporating flaw remediation into configuration management processes, required remediation\nisactions can be tracked and verified.\naOrganization-defined time periods for updating security-relevant software and firmware may\nvary based on a variety of risk factors, including the security category of the system, the criticality b\nof the update (i.e., severity of the vulnerability related to the discovered flaw), the organizational\nrisk tolerance, the mission supported by the system, or the threat environment. Some types of e\nflaw remediation may require more testing than other types. Organizations determine the type f\nhof testing needed for the specific type of flaw remediation activity under consideration and the\ngtypes of changes that are to be configuration-managed. In some situations, organizations may\nfdetermine that the testing of software or firmware updates is not necessary or practical, such as r\nwhen implementing simple malicious code signature updates. In testing decisions, organizations\nconsider whether security-relevant software or firmware updates are obtained from authorized\nsources with appropriate digital signatures. s\noSI-Related Controls:  CA-5, CM-3, CM-4, CM-5, CM-6, CM-8, MA-2, RA-5, SA-8, SA-10, SA-11, SI-3,\n5, SI-7, SI-11. r\n0Control Enhancements:\n2| (1) FLAW REMEDIATION  CENTRAL MANAGEMENT 8\n[Withdrawn: Incorporated into PL-9.] I\nS|  (2) FLAW REMEDIATION  AUTOMATED FLAW REMEDIATION STATUS\nDetermine if system components have applicable security-relevant software and firmware\nAssignment: organization-defined automated mechanisms-updates installed using []\nAssignment: organization-defined frequency[]. r\nDiscussion:  Automated mechanisms can track and determine the status of known flaws for\nsystem components.\nRelated Controls:  CA-7, SI-4.\n| (3) FLAW REMEDIATION  TIME TO REMEDIATE FLAWS AND BENCHMARKS FOR CORRECTIVE ACTIONS\n(a)Measure the time between flaw identification and flaw remediation; and\nAssignment: (b)Establish the following benchmarks for taking corrective actions: [\norganization-defined benchmarks].\nDiscussion:  Organizations determine the time it takes on average to correct system flaws\nafter such flaws have been identified and subsequently establish organizational benchmarks\nCHAPTER THREE   PAGE 333\nNISTSP800-53,R.5SPCISO                                                               EV                                                                                      ECURITY AND RIVACY ONTROLS FOR NFORMATION YSTEMS AND RGANIZATIONS\n_________________________________________________________________________________________________\n(i.e., time frames) for taking corrective actions. Benchmarks can be established by the type\nof flaw or the severity of the potential vulnerability if the flaw can be exploited.\nRelated Controls:  None.\n|  (4) FLAW REMEDIATION  AUTOMATED PATCH MANAGEMENT TOOLS\nEmploy automated patch management tools to facilitate flaw remediation to the following\nAssignment: organization-defined system componentssystem components: [].\nDiscussion:  Using automated tools to support patch management helps to ensure the\ntimeliness and completeness of system patching operations.\nRelated Controls:  None.\n|  (5) FLAW REMEDIATION  AUTOMATIC SOFTWARE AND FIRMWARE UPDATES\nAssignment: organization-defined security-relevant software and firmware Install [T\nupdatesAssignment: organization-defined system componentsi] automatically to []. s\nuDiscussion:  Due to system integrity and availability concerns, organizations consider the\nlimethodology used to carry out automatic updates. Organizations balance the need to c\nensure that the updates are installed as soon as possible with the need to maintain i\nconfiguration management and control with any mission or operational impacts that\naautomatic updates might impose.\niRelated Controls:  None. la\n| (6)  FLAW REMEDIATION  REMOVAL OF PREVIOUS VERSIONS OF SOFTWARE AND FIRMWARE\neAssignment: organization-defined software and firmware Remove previous versions of [\nfcomponents] after updated versions have been installed.\nDiscussion:  Previous versions of software or firmware components that are not removed\nefrom the system after updates have been installed may be exploited by adversaries. Some\noproducts may automatically remove previous versions of software and firmware from the\n:system.\npRelated Controls:  None.\ndReferences:  [OMB A-130], [FIPS 140-3], [FIPS 186-4], [SP 800-39], [SP 800-40], [SP 800-128], [IR\ni.7788]. o"
}