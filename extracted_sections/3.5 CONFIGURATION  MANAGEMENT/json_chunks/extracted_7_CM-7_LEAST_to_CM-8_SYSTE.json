{
  "subheading": "CM-7 LEAST FUNCTIONALITY",
  "start_text": "CM-7 LEAST FUNCTIONALITY\nControl:\nAssignment: orga",
  "content": "CM-7 LEAST FUNCTIONALITY\nControl:\nAssignment: organization-defined mission essential a.Configure the system to provide only [\ncapabilities]; and\nb.Prohibit or restrict the use of the following functions, ports, protocols, software, and/or\nAssignment: organization-defined prohibited or restricted functions, system ports, services: [\nprotocols, software, and/or services].\nCHAPTER THREE   PAGE 104\nNISTSP800-53,R.5SPCISO                                                               EV                                                                                      ECURITY AND RIVACY ONTROLS FOR NFORMATION YSTEMS AND RGANIZATIONS\n_________________________________________________________________________________________________\nDiscussion:  Systems provide a wide variety of functions and services. Some of the functions and\nservices routinely provided by default may not be necessary to support essential organizational\nmissions, functions, or operations. Additionally, it is sometimes convenient to provide multiple\nservices from a single system component, but doing so increases risk over limiting the services\nprovided by that single component. Where feasible, organizations limit component functionality\nto a single function per component. Organizations consider removing unused or unnecessary\nsoftware and disabling unused or unnecessary physical and logical ports and protocols to prevent\nunauthorized connection of components, transfer of information, and tunneling. Organizations\nemploy network scanning tools, intrusion detection and prevention systems, and end-point\nprotection technologies, such as firewalls and host-based intrusion detection systems, to identify\nand prevent the use of prohibited functions, protocols, ports, and services. Least functionality\nSA-can also be achieved as part of the fundamental design and development of the system (see\n8, SC-2, and SC-3).\niRelated Controls:  AC-3, AC-4, CM-2, CM-5, CM-6, CM-11, RA-5, SA-4, SA-5, SA-8, SA-9, SA-15, SC-s\n2, SC-3, SC-7, SC-37, SI-4.u\nControl Enhancements: a\n| (1) LEAST FUNCTIONALITY  PERIODIC REVIEW\nAssignment: organization-defined frequency(a)Review the system [] to identify  v\niunnecessary and/or nonsecure functions, ports, protocols, software, and services; and la\nlAssignment: organization-defined functions, ports, protocols, (b)Disable or remove [ e\nrsoftware, and services within the system deemed to be unnecessary and/or e\nnonsecure]. o\nDiscussion:  Organizations review functions, ports, protocols, and services provided by h\nrsystems or system components to determine the functions and services that are candidates g\nfor elimination. Such reviews are especially important during transition periods from older\ntechnologies to newer technologies (e.g., transition from IPv4 to IPv6). These technology m\ntransitions may require implementing the older and newer technologies simultaneously h\npduring the transition period and returning to minimum essential functions, ports, protocols,\n/and services at the earliest opportunity. Organizations can either decide the relative security /\nof the function, port, protocol, and/or service or base the security decision on the i.\nrassessment of other entities. Unsecure protocols include Bluetooth, FTP, and peer-to-peer g\nnetworking. 0\n0Related Controls:  AC-18.\nN| (2) LEAST FUNCTIONALITY  PREVENT PROGRAM EXECUTION\nSelection (one or more): Assignment: Prevent program execution in accordance with [[\nPorganization-defined policies, rules of behavior, and/or access agreements regarding\nsoftware program usage and restrictions;rules authorizing the terms and conditions of 0]\nsoftware program usage]. 5\n5Discussion:  Prevention of program execution addresses organizational policies, rules of\nbehavior, and/or access agreements that restrict software usage and the terms and\nconditions imposed by the developer or manufacturer, including software licensing and\ncopyrights. Restrictions include prohibiting auto-execute features, restricting roles allowed\nto approve program execution, permitting or prohibiting specific software programs, or\nrestricting the number of program instances executed at the same time.\nRelated Controls:  CM-8, PL-4, PL-9, PM-5, PS-6.\n| (3) LEAST FUNCTIONALITY  REGISTRATION COMPLIANCE\nAssignment: organization-defined registration requirements for Ensure compliance with [\nfunctions, ports, protocols, and services].\nCHAPTER THREE   PAGE 105\nNISTSP800-53,R.5SPCISO                                                               EV                                                                                      ECURITY AND RIVACY ONTROLS FOR NFORMATION YSTEMS AND RGANIZATIONS\n_________________________________________________________________________________________________\nDiscussion:  Organizations use the registration process to manage, track, and provide\noversight for systems and implemented functions, ports, protocols, and services.\nRelated Controls:  None.\n|\u2014-- (4) LEAST FUNCTIONALITY  UNAUTHORIZED SOFTWARE  DENYBYEXCEPTION\nAssignment: organization-defined software programs not authorized to (a)Identify [\nexecute on the system];\n(b)Employ an allow-all, deny-by-exception policy to prohibit the execution of\nunauthorized software programs on the system; and\nAssignment: (c)Review and update the list of unauthorized software programs [\norganization-defined frequency].\nDiscussion:  Unauthorized software programs can be limited to specific versions or from a\nspecific source. The concept of prohibiting the execution of unauthorized software may also\nbe applied to user actions, system ports and protocols, IP addresses/ranges, websites, and\nMAC addresses. b\nRelated Controls:  CM-6, CM-8, CM-10, PL-9, PM-5. a\n|\u2014-- (5)  LEAST FUNCTIONALITY  AUTHORIZED SOFTWARE  ALLOWBYEXCEPTION\nAssignment: organization-defined software programs authorized to execute (a)Identify [ v\nion the system]; la\nle(b)Employ a deny-all, permit-by-exception policy to allow the execution of authorized\nsoftware programs on the system; and e\nAssignment: (c)Review and update the list of authorized software programs [\norganization-defined frequencyh].\nDiscussion:  Authorized software programs can be limited to specific versions or from a\nfspecific source. To facilitate a comprehensive authorized software process and increase the r\nstrength of protection for attacks that bypass application level authorized software, software\nprograms may be decomposed into and monitored at different levels of detail. These levels t\nsinclude applications, application programming interfaces, application modules, scripts,\ndsystem processes, system services, kernel functions, registries, drivers, and dynamic link\ni.libraries. The concept of permitting the execution of authorized software may also be o\napplied to user actions, system ports and protocols, IP addresses/ranges, websites, and MAC\naddresses. Organizations consider verifying the integrity of authorized software programs\n0using digital signatures, cryptographic checksums, or hash functions. Verification of\nauthorized software can occur either prior to execution or at system startup. The /\nCA-3(5) and SC-7. identification of authorized URLs for websites is addressed in S\nSRelated Controls:  CM-2, CM-6, CM-8, CM-10, PL-9, PM-5, SA-10, SC-34, SI-7.\n0| (6) LEAST FUNCTIONALITY  CONFINED ENVIRONMENTS WITH LIMITED PRIVILEGES\n5 Require thatthe following user-installed software execute in a confined physical or virtual 3\nAssignment: organization-defined user-machine environment with limited privileges: [\ninstalled software].\nDiscussion:  Organizations identify software that may be of concern regarding its origin or\npotential for containing malicious code. For this type of software, user installations occur in\nconfined environments of operation to limit or contain damage from malicious code that\nmay be executed.\nRelated Controls:  CM-11, SC-44.\n| (7) LEAST FUNCTIONALITY  CODE EXECUTION IN PROTECTED ENVIRONMENTS\nCHAPTER THREE   PAGE 106\nNISTSP800-53,R.5SPCISO                                                               EV                                                                                      ECURITY AND RIVACY ONTROLS FOR NFORMATION YSTEMS AND RGANIZATIONS\n_________________________________________________________________________________________________\nAllow execution of binary or machine-executable code only in confined physical or virtual\nAssignment: organization-machine environments and with the explicit approval of [\ndefined personnel or roles] when such code is:\n(a)Obtained from sources with limited or no warranty; and/or\n(b)Without the provision of source code.\nDiscussion:  Code execution in protected environments applies to all sources of binary or\nmachine-executable code, including commercial software and firmware and open-source\nsoftware.\nRelated Controls:  CM-10, SC-44.\n| (8) LEAST FUNCTIONALITY  BINARY OR MACHINE EXECUTABLE CODE\n(a)Prohibit the use of binary or machine-executable code from sources with limited or no\nwarranty or without the provision of source code; and h\n(b)Allow exceptions only for compelling mission or operational requirements and with  p\nbthe approval of the authorizing official.\nDiscussion:  Binary or machine executable code applies to all sources of binary or machine-\nnexecutable code, including commercial software and firmware and open-source software.\nOrganizations assess software products without accompanying source code or from sources\nwith limited or no warranty for potential security impacts. The assessments address the fact a\nthat software products without the provision of source code may be difficult to review,\nrepair, or extend. In addition, there may be no owners to make such repairs on behalf of\neorganizations. If open-source software is used, the assessments address the fact that there is\nono warranty, the open-source software could contain back doors or malware, and there may\nbe no support available. h\ngRelated Controls:  SA-5, SA-22.\no| (9) LEAST FUNCTIONALITY  PROHIBITING THE USE OF UNAUTHORIZED HARDWARE  m\nhAssignment: organization-defined hardware components authorized for (a)Identify [\nsystem use];\nd(b)Prohibit the use or connection of unauthorized hardware components;\noAssignment: (c)Review and update the list of authorized hardware components [\n/organization-defined frequency]. 1\n6Discussion:  Hardware components provide the foundation for organizational systems and\nthe platform for the execution of authorized software programs. Managing the inventory of\nhardware components and controlling which hardware components are permitted to be\ninstalled or connected to organizational systems is essential in order to provide adequate T\nsecurity. P\nRelated Controls:  None. 0\n3References:  [FIPS 140-3], [FIPS 180-4], [FIPS 186-4], [FIPS 202], [SP 800-167]."
}